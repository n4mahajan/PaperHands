{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\context\\\\AuthProvider.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useContext } from 'react/cjs/react.development';\nimport firebase from \"../firebase/firebase\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar AuthContext = createContext();\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      balance = _useState4[0],\n      setBalance = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stocks = _useState6[0],\n      setStocks = _useState6[1];\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function _callee2(firebaseUser) {\n      var docRef;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('In firebase auth state change');\n\n              if (firebaseUser) {\n                docRef = firebase.firestore().collection('Users').doc(firebaseUser.uid);\n                docRef.get().then(function _callee(doc) {\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          setUser({\n                            name: doc.data().name,\n                            uid: firebaseUser.uid\n                          });\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n                firebase.firestore().collection('Users').doc(firebaseUser.uid).onSnapshot(function (documentSnapshot) {\n                  var b = documentSnapshot.data().balance;\n                  setBalance(b);\n                });\n                firebase.firestore().collection('Users').doc(firebaseUser.uid).onSnapshot(function (documentSnapshot) {\n                  var b = documentSnapshot.data().stocks;\n                  setStocks(b);\n                });\n              } else {\n                setUser(null);\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      balance: balance,\n      stocks: stocks\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default AuthProvider;\nexport { AuthContext };","map":{"version":3,"sources":["C:/Users/Jiahao Luo/Documents/PaperHands/Project/PaperHands/context/AuthProvider.js"],"names":["React","createContext","useState","useEffect","useContext","firebase","AuthContext","AuthProvider","children","user","setUser","balance","setBalance","stocks","setStocks","auth","onAuthStateChanged","firebaseUser","console","log","docRef","firestore","collection","doc","uid","get","then","name","data","onSnapshot","documentSnapshot","b"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,OAAOC,QAAP;;;AAGA,IAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEA,IAAMM,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AACnC,kBAAwBN,QAAQ,EAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA2BR,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAeC,UAAf;;AACA,mBAAyBV,QAAQ,CAAC,IAAD,CAAjC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAcC,SAAd;;AAGAX,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAmC,kBAAMC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCC,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,kBAAIF,YAAJ,EAAkB;AACZG,gBAAAA,MADY,GACHf,QAAQ,CAClBgB,SADU,GAEVC,UAFU,CAEC,OAFD,EAGVC,GAHU,CAGNN,YAAY,CAACO,GAHP,CADG;AAMhBJ,gBAAAA,MAAM,CAACK,GAAP,GAAaC,IAAb,CAAkB,iBAAMH,GAAN;AAAA;AAAA;AAAA;AAAA;AACdb,0BAAAA,OAAO,CAAC;AACNiB,4BAAAA,IAAI,EAACJ,GAAG,CAACK,IAAJ,GAAWD,IADV;AAENH,4BAAAA,GAAG,EAACP,YAAY,CAACO;AAFX,2BAAD,CAAP;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB;AAOFnB,gBAAAA,QAAQ,CACPgB,SADD,GAECC,UAFD,CAEY,OAFZ,EAGCC,GAHD,CAGKN,YAAY,CAACO,GAHlB,EAICK,UAJD,CAIY,UAAAC,gBAAgB,EAAI;AAC9B,sBAAMC,CAAC,GAAGD,gBAAgB,CAACF,IAAjB,GAAwBjB,OAAlC;AACAC,kBAAAA,UAAU,CAACmB,CAAD,CAAV;AACD,iBAPD;AASA1B,gBAAAA,QAAQ,CACPgB,SADD,GAECC,UAFD,CAEY,OAFZ,EAGCC,GAHD,CAGKN,YAAY,CAACO,GAHlB,EAICK,UAJD,CAIY,UAAAC,gBAAgB,EAAI;AAC9B,sBAAMC,CAAC,GAAGD,gBAAgB,CAACF,IAAjB,GAAwBf,MAAlC;AACAC,kBAAAA,SAAS,CAACiB,CAAD,CAAT;AACD,iBAPD;AASC,eA/BD,MA+BK;AACDrB,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAnCgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnC;AAqCD,GAtCQ,EAsCN,EAtCM,CAAT;AAwCA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAJA,IADK;AAELC,MAAAA,OAAO,EAAPA,OAFK;AAGLC,MAAAA,OAAO,EAAPA,OAHK;AAILE,MAAAA,MAAM,EAANA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,QAPH,CADF;AAWD,CAzDD;;AA2DA,eAAeD,YAAf;AAEA,SAAQD,WAAR","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport {useContext} from 'react/cjs/react.development';\r\nimport firebase from '../firebase/firebase';\r\nimport {Text, View} from 'react-native';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({children}) => {\r\n  const [user, setUser] = useState();\r\n  const [balance,setBalance]=useState(null)\r\n  const [stocks,setStocks]=useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async firebaseUser => {\r\n      console.log('In firebase auth state change');\r\n      if (firebaseUser) {\r\n        let docRef = firebase\r\n          .firestore()\r\n          .collection('Users')\r\n          .doc(firebaseUser.uid);\r\n\r\n        docRef.get().then(async doc => {\r\n            setUser({\r\n              name:doc.data().name,\r\n              uid:firebaseUser.uid\r\n            })\r\n        });\r\n\r\n      firebase\r\n      .firestore()\r\n      .collection('Users')\r\n      .doc(firebaseUser.uid)\r\n      .onSnapshot(documentSnapshot => {\r\n        const b = documentSnapshot.data().balance;\r\n        setBalance(b);\r\n      });\r\n\r\n      firebase\r\n      .firestore()\r\n      .collection('Users')\r\n      .doc(firebaseUser.uid)\r\n      .onSnapshot(documentSnapshot => {\r\n        const b = documentSnapshot.data().stocks;\r\n        setStocks(b);\r\n      });\r\n\r\n      }else{\r\n          setUser(null)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        balance,\r\n        stocks\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n\r\nexport {AuthContext};"]},"metadata":{},"sourceType":"module"}