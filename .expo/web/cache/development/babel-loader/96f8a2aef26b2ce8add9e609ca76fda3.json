{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\PaperHands\\\\BuySell\\\\Chart.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ChartDot, ChartPath, ChartPathProvider, ChartYLabel, ChartXLabel } from '@rainbow-me/animated-charts';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SIZE = _Dimensions$get.width;\n\nexport { SIZE };\nimport { useState, useContext } from \"react\";\nimport { useEffect } from 'react/cjs/react.development';\nimport { block } from 'react-native-reanimated';\nimport moment from \"moment\";\n\nvar Chart = function Chart(_ref) {\n  var hourData = _ref.hourData,\n      dayData = _ref.dayData,\n      monthData = _ref.monthData,\n      yearData = _ref.yearData,\n      symbol = _ref.symbol;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var previous = null;\n\n  var _useState3 = useState(\"Hour\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeLabel = _useState4[0],\n      setActiveLabel = _useState4[1];\n\n  useEffect(function () {\n    if (hourData !== previous) {\n      previous = hourData;\n      setData(hourData);\n    }\n  }, [hourData]);\n  var graphs = [{\n    label: \"1H\",\n    value: 0,\n    data: hourData\n  }, {\n    label: \"1D\",\n    value: 1,\n    data: dayData\n  }, {\n    label: \"1M\",\n    value: 2,\n    data: monthData\n  }, {\n    label: \"1Y\",\n    value: 3,\n    data: yearData\n  }];\n\n  var formatUSD = function () {\n    var _f = function _f(value) {\n      if (value === '') {\n        return '';\n      }\n\n      return \"$\" + value.toLocaleString('en-US', {\n        currency: 'USD'\n      });\n    };\n\n    _f._closure = {};\n    _f.asString = \"function _f(value){if(value===''){return'';}return\\\"$\\\"+value.toLocaleString('en-US',{currency:'USD'});}\";\n    _f.__workletHash = 1954769901686;\n    _f.__location = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\PaperHands\\\\BuySell\\\\Chart.js (46:22)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }();\n\n  var formatDate = function () {\n    var _f = function _f(value) {\n      if (value === '') {\n        return '';\n      }\n\n      var val = parseInt(value);\n      var date = new Date(Number(val * 1000));\n      var d = date.getDate();\n      var n = date.getMonth();\n      var y = date.getFullYear();\n      return y + \"-\" + n + \"-\" + d;\n    };\n\n    _f._closure = {};\n    _f.asString = \"function _f(value){if(value===''){return'';}var val=parseInt(value);var date=new Date(Number(val*1000));var d=date.getDate();var n=date.getMonth();var y=date.getFullYear();return y+\\\"-\\\"+n+\\\"-\\\"+d;}\";\n    _f.__workletHash = 16892676592160;\n    _f.__location = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\PaperHands\\\\BuySell\\\\Chart.js (56:23)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }();\n\n  var formatTime = function () {\n    var _f = function _f(value) {\n      if (value === '') {\n        return '';\n      }\n\n      var val = parseInt(value);\n      var date = new Date(Number(val * 1000));\n      var m = date.getMinutes();\n      var h = date.getHours();\n\n      if (m < 10) {\n        return h + \":0\" + m;\n      }\n\n      return h + \":\" + m;\n    };\n\n    _f._closure = {};\n    _f.asString = \"function _f(value){if(value===''){return'';}var val=parseInt(value);var date=new Date(Number(val*1000));var m=date.getMinutes();var h=date.getHours();if(m<10){return h+\\\":0\\\"+m;}return h+\\\":\\\"+m;}\";\n    _f.__workletHash = 16339806075684;\n    _f.__location = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\PaperHands\\\\BuySell\\\\Chart.js (69:23)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }();\n\n  return React.createElement(ChartPathProvider, {\n    data: {\n      points: data,\n      smoothingStrategy: 'bezier'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.lowerTitles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(ChartYLabel, {\n    format: formatUSD,\n    style: styles.boldTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), React.createElement(ChartXLabel, {\n    format: formatDate,\n    style: styles.boldTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), React.createElement(ChartXLabel, {\n    format: formatTime,\n    style: styles.boldTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.chartLineWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(ChartPath, {\n    height: SIZE / 2,\n    stroke: \"black\",\n    width: SIZE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), React.createElement(ChartDot, {\n    style: {\n      backgroundColor: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [activeLabel === \"Hour\" && styles.activeGraphLabel],\n    onPress: function onPress() {\n      setData(hourData);\n      setActiveLabel(\"Hour\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \" \", graphs[0].label))), React.createElement(TouchableOpacity, {\n    style: [activeLabel === \"Day\" && styles.activeGraphLabel],\n    onPress: function onPress() {\n      setData(dayData);\n      setActiveLabel(\"Day\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \" \", graphs[1].label))), React.createElement(TouchableOpacity, {\n    style: [activeLabel === \"Month\" && styles.activeGraphLabel],\n    onPress: function onPress() {\n      setData(monthData);\n      setActiveLabel(\"Month\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \" \", graphs[2].label))), React.createElement(TouchableOpacity, {\n    style: [activeLabel === \"Year\" && styles.activeGraphLabel],\n    onPress: function onPress() {\n      setData(yearData);\n      setActiveLabel(\"Year\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \" \", graphs[3].label)))));\n};\n\nvar styles = StyleSheet.create({\n  chartWrapper: {\n    marginVertical: 16\n  },\n  titlesWrapper: {\n    marginHorizontal: 16\n  },\n  upperTitles: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  upperLeftTitle: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  image: {\n    width: 24,\n    height: 24,\n    marginRight: 4\n  },\n  subtitle: {\n    fontSize: 14,\n    color: 'black'\n  },\n  lowerTitles: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  boldTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  title: {\n    fontSize: 18\n  },\n  chartLineWrapper: {\n    marginTop: 40\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: \"space-around\",\n    width: \"90%\",\n    alignSelf: \"center\"\n  },\n  activeGraphLabel: {\n    backgroundColor: '#bcbcbc',\n    borderRadius: 5,\n    width: \"10%\",\n    height: \"120%\"\n  },\n  buttonText: {\n    alignSelf: \"center\"\n  }\n});\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Jiahao Luo/Documents/PaperHands/Project/PaperHands/PaperHands/BuySell/Chart.js"],"names":["React","ChartDot","ChartPath","ChartPathProvider","ChartYLabel","ChartXLabel","Dimensions","get","SIZE","width","useState","useContext","useEffect","block","moment","Chart","hourData","dayData","monthData","yearData","symbol","data","setData","previous","activeLabel","setActiveLabel","graphs","label","value","formatUSD","toLocaleString","currency","formatDate","val","parseInt","date","Date","Number","d","getDate","n","getMonth","y","getFullYear","formatTime","m","getMinutes","h","getHours","points","smoothingStrategy","styles","lowerTitles","boldTitle","chartLineWrapper","backgroundColor","buttonContainer","activeGraphLabel","buttonText","StyleSheet","create","chartWrapper","marginVertical","titlesWrapper","marginHorizontal","upperTitles","flexDirection","justifyContent","alignItems","upperLeftTitle","image","height","marginRight","subtitle","fontSize","color","fontWeight","title","marginTop","alignSelf","borderRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,iBAA7B,EAAgDC,WAAhD,EAA6DC,WAA7D,QAA+E,6BAA/E;;AACO,sBAAsBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAtB;AAAA,IAAcC,IAAd,mBAAOC,KAAP;;;AACP,SAAQC,QAAR,EAAiBC,UAAjB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAuD;AAAA,MAApDC,QAAoD,QAApDA,QAAoD;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAClE,kBAAwBV,QAAQ,EAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACC,MAAIC,QAAQ,GAAG,IAAf;;AACA,mBAAsCb,QAAQ,CAAC,MAAD,CAA9C;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,cAApB;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,QAAQ,KAAKO,QAAjB,EAA2B;AACzBA,MAAAA,QAAQ,GAAGP,QAAX;AACAM,MAAAA,OAAO,CAACN,QAAD,CAAP;AACD;AACF,GALQ,EAKN,CAACA,QAAD,CALM,CAAT;AAOA,MAAMU,MAAM,GAAG,CACb;AACEC,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEP,IAAAA,IAAI,EAAEL;AAHR,GADa,EAMb;AACEW,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEP,IAAAA,IAAI,EAAEJ;AAHR,GANa,EAWb;AACEU,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEP,IAAAA,IAAI,EAAEH;AAHR,GAXa,EAgBb;AACES,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEP,IAAAA,IAAI,EAAEF;AAHR,GAhBa,CAAf;;AAuBA,MAAMU,SAAS;AAAA,yBAAGD,KAAH,EAAY;AAEvB,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,eAAO,EAAP;AACD;;AACD,mBAAWA,KAAK,CAACE,cAAN,CAAqB,OAArB,EAA8B;AACvCC,QAAAA,QAAQ,EAAE;AAD6B,OAA9B,CAAX;AAGH,KARc;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,KAAf;;AAUA,MAAMC,UAAU;AAAA,yBAAGJ,KAAH,EAAY;AAE1B,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,eAAO,EAAP;AACD;;AACD,UAAIK,GAAG,GAAGC,QAAQ,CAACN,KAAD,CAAlB;AACA,UAAMO,IAAI,GAAG,IAAIC,IAAJ,CAASC,MAAM,CAACJ,GAAG,GAAG,IAAP,CAAf,CAAb;AACA,UAAMK,CAAC,GAAGH,IAAI,CAACI,OAAL,EAAV;AACA,UAAMC,CAAC,GAAGL,IAAI,CAACM,QAAL,EAAV;AACA,UAAMC,CAAC,GAAGP,IAAI,CAACQ,WAAL,EAAV;AACA,aAAUD,CAAV,SAAeF,CAAf,SAAoBF,CAApB;AACD,KAXe;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,KAAhB;;AAaA,MAAMM,UAAU;AAAA,yBAAGhB,KAAH,EAAY;AAE1B,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,eAAO,EAAP;AACD;;AACD,UAAIK,GAAG,GAAGC,QAAQ,CAACN,KAAD,CAAlB;AACA,UAAMO,IAAI,GAAG,IAAIC,IAAJ,CAASC,MAAM,CAACJ,GAAG,GAAG,IAAP,CAAf,CAAb;AACA,UAAIY,CAAC,GAAGV,IAAI,CAACW,UAAL,EAAR;AACA,UAAMC,CAAC,GAAGZ,IAAI,CAACa,QAAL,EAAV;;AACA,UAAIH,CAAC,GAAG,EAAR,EAAY;AACV,eAAUE,CAAV,UAAgBF,CAAhB;AACD;;AACD,aAAUE,CAAV,SAAeF,CAAf;AACD,KAbe;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,KAAhB;;AAeA,SACI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAE;AAAEI,MAAAA,MAAM,EAAE5B,IAAV;AAAgB6B,MAAAA,iBAAiB,EAAE;AAAnC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEvB,SADV;AAEE,IAAA,KAAK,EAAEsB,MAAM,CAACE,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAErB,UADV;AAEE,IAAA,KAAK,EAAEmB,MAAM,CAACE,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAET,UADV;AAEE,IAAA,KAAK,EAAEO,MAAM,CAACE,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAE9C,IAAI,GAAG,CAA1B;AAA6B,IAAA,MAAM,EAAC,OAApC;AAA4C,IAAA,KAAK,EAAEA,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAE+C,MAAAA,eAAe,EAAE;AAAnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,EAmBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIJ,MAAM,CAACK,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAE,CAAChC,WAAW,KAAK,MAAhB,IAA0B2B,MAAM,CAACM,gBAAlC,CADP;AAEA,IAAA,OAAO,EAAE,mBAAM;AACbnC,MAAAA,OAAO,CAACN,QAAD,CAAP;AACAS,MAAAA,cAAc,CAAC,MAAD,CAAd;AAAuB,KAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChC,MAAM,CAAC,CAAD,CAAN,CAAUC,KAA5C,CADF,CALF,CADF,EAUE,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAE,CAACH,WAAW,KAAK,KAAhB,IAAyB2B,MAAM,CAACM,gBAAjC,CADP;AAEA,IAAA,OAAO,EAAE,mBAAM;AACbnC,MAAAA,OAAO,CAACL,OAAD,CAAP;AACAQ,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChC,MAAM,CAAC,CAAD,CAAN,CAAUC,KAA5C,CADF,CALF,CAVF,EAmBE,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAE,CAACH,WAAW,KAAK,OAAhB,IAA2B2B,MAAM,CAACM,gBAAnC,CADP;AAEA,IAAA,OAAO,EAAE,mBAAM;AACbnC,MAAAA,OAAO,CAACJ,SAAD,CAAP;AACAO,MAAAA,cAAc,CAAC,OAAD,CAAd;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChC,MAAM,CAAC,CAAD,CAAN,CAAUC,KAA5C,CADF,CANF,CAnBF,EA6BE,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAE,CAACH,WAAW,KAAK,MAAhB,IAA0B2B,MAAM,CAACM,gBAAlC,CADP;AAEA,IAAA,OAAO,EAAE,mBAAM;AACbnC,MAAAA,OAAO,CAACH,QAAD,CAAP;AACAM,MAAAA,cAAc,CAAC,MAAD,CAAd;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkChC,MAAM,CAAC,CAAD,CAAN,CAAUC,KAA5C,CADF,CANF,CA7BF,CAnBA,CADJ;AA8DH,CAvID;;AAyIA,IAAMwB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE;AADJ,GADe;AAI7BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,gBAAgB,EAAE;AADL,GAJc;AAO7BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,cAAc,EAAE,eAFL;AAGXC,IAAAA,UAAU,EAAE;AAHD,GAPgB;AAY7BC,EAAAA,cAAc,EAAE;AACdH,IAAAA,aAAa,EAAE,KADD;AAEdE,IAAAA,UAAU,EAAE;AAFE,GAZa;AAgB7BE,EAAAA,KAAK,EAAE;AACL7D,IAAAA,KAAK,EAAE,EADF;AAEL8D,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE;AAHR,GAhBsB;AAqB7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE;AAFC,GArBmB;AAyB7BvB,EAAAA,WAAW,EAAE;AACXc,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,cAAc,EAAE,eAFL;AAGXC,IAAAA,UAAU,EAAE;AAHD,GAzBgB;AA8B7Bf,EAAAA,SAAS,EAAE;AACTqB,IAAAA,QAAQ,EAAE,EADD;AAETE,IAAAA,UAAU,EAAE,MAFH;AAGTD,IAAAA,KAAK,EAAE;AAHE,GA9BkB;AAmC7BE,EAAAA,KAAK,EAAE;AACLH,IAAAA,QAAQ,EAAE;AADL,GAnCsB;AAsC7BpB,EAAAA,gBAAgB,EAAE;AAChBwB,IAAAA,SAAS,EAAE;AADK,GAtCW;AAyC7BtB,EAAAA,eAAe,EAAE;AACfU,IAAAA,aAAa,EAAE,KADA;AAEfE,IAAAA,UAAU,EAAE,QAFG;AAGfD,IAAAA,cAAc,EAAE,cAHD;AAIf1D,IAAAA,KAAK,EAAE,KAJQ;AAKfsE,IAAAA,SAAS,EAAE;AALI,GAzCY;AAgD7BtB,EAAAA,gBAAgB,EAAE;AAChBF,IAAAA,eAAe,EAAE,SADD;AAEhByB,IAAAA,YAAY,EAAE,CAFE;AAGhBvE,IAAAA,KAAK,EAAE,KAHS;AAIhB8D,IAAAA,MAAM,EAAE;AAJQ,GAhDW;AAsD7Bb,EAAAA,UAAU,EAAE;AACVqB,IAAAA,SAAS,EAAE;AADD;AAtDiB,CAAlB,CAAf;AA2DA,eAAehE,KAAf","sourcesContent":["import React from 'react'\r\nimport {View, Text, Dimensions, StyleSheet, TouchableOpacity} from 'react-native'\r\nimport {ChartDot, ChartPath, ChartPathProvider, ChartYLabel, ChartXLabel} from '@rainbow-me/animated-charts';\r\nexport const {width: SIZE} = Dimensions.get('window');\r\nimport {useState,useContext} from \"react\"\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport { block } from 'react-native-reanimated';\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Chart = ( {hourData, dayData, monthData, yearData, symbol}) => {\r\n\t  const [data, setData] = useState()\r\n    let previous = null\r\n    const [activeLabel, setActiveLabel] = useState(\"Hour\");\r\n\r\n    useEffect(() => {\r\n      if (hourData !== previous) {\r\n        previous = hourData\r\n        setData(hourData)\r\n      }\r\n    }, [hourData])\r\n\r\n    const graphs = [\r\n      {\r\n        label: \"1H\",\r\n        value: 0,\r\n        data: hourData,\r\n      },\r\n      {\r\n        label: \"1D\",\r\n        value: 1,\r\n        data: dayData,\r\n      },\r\n      {\r\n        label: \"1M\",\r\n        value: 2,\r\n        data: monthData,\r\n      },\r\n      {\r\n        label: \"1Y\",\r\n        value: 3,\r\n        data: yearData,\r\n      },\r\n    ];\r\n\r\n    const formatUSD = value => {\r\n        'worklet';\r\n        if (value === '') {\r\n          return '';\r\n        }\r\n        return `$${value.toLocaleString('en-US', {\r\n          currency: 'USD',\r\n        })}`;\r\n    };\r\n\r\n    const formatDate = value => {\r\n      'worklet';\r\n      if (value === '') {\r\n        return '';\r\n      }\r\n      var val = parseInt(value);\r\n      const date = new Date(Number(val * 1000));\r\n      const d = date.getDate();\r\n      const n = date.getMonth();\r\n      const y = date.getFullYear();\r\n      return `${y}-${n}-${d}`;\r\n    };\r\n\r\n    const formatTime = value => {\r\n      'worklet';\r\n      if (value === '') {\r\n        return '';\r\n      }\r\n      var val = parseInt(value);\r\n      const date = new Date(Number(val * 1000));\r\n      let m = date.getMinutes();\r\n      const h = date.getHours();\r\n      if (m < 10) {\r\n        return `${h}:0${m}`\r\n      }\r\n      return `${h}:${m}`;\r\n    };\r\n\r\n    return (\r\n        <ChartPathProvider data={{ points: data, smoothingStrategy: 'bezier' }}>\r\n          <View style={styles.lowerTitles}>\r\n            <ChartYLabel\r\n              format={formatUSD}\r\n              style={styles.boldTitle}\r\n            />\r\n            <ChartXLabel\r\n              format={formatDate}\r\n              style={styles.boldTitle}\r\n            />\r\n            <ChartXLabel\r\n              format={formatTime}\r\n              style={styles.boldTitle}\r\n            />\r\n          </View>\r\n          <View style = {styles.chartLineWrapper}>\r\n            <ChartPath height={SIZE / 2} stroke=\"black\" width={SIZE} />\r\n            <ChartDot style={{ backgroundColor: 'black' }} />\r\n          </View>\r\n        <View style = {styles.buttonContainer}>\r\n          <TouchableOpacity\t\r\n          style={[activeLabel === \"Hour\" && styles.activeGraphLabel]}\r\n          onPress={() => {\r\n            setData(hourData)\r\n            setActiveLabel(\"Hour\")}}>\r\n            <View>\r\n              <Text style={styles.buttonText}> {graphs[0].label}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n          style={[activeLabel === \"Day\" && styles.activeGraphLabel]}\r\n          onPress={() => {\r\n            setData(dayData)\r\n            setActiveLabel(\"Day\")}}>\r\n            <View>\r\n              <Text style={styles.buttonText}> {graphs[1].label}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n          style={[activeLabel === \"Month\" && styles.activeGraphLabel]}\r\n          onPress={() => {\r\n            setData(monthData)\r\n            setActiveLabel(\"Month\")\r\n          }}>\r\n            <View>\r\n              <Text style={styles.buttonText}> {graphs[2].label}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n          style={[activeLabel === \"Year\" && styles.activeGraphLabel]}\r\n          onPress={() => {\r\n            setData(yearData)\r\n            setActiveLabel(\"Year\")\r\n          }}>\r\n            <View>\r\n              <Text style={styles.buttonText}> {graphs[3].label}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n        </ChartPathProvider>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    chartWrapper: {\r\n      marginVertical: 16\r\n    },\r\n    titlesWrapper: {\r\n      marginHorizontal: 16\r\n    },\r\n    upperTitles: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n    },\r\n    upperLeftTitle: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    image: {\r\n      width: 24,\r\n      height: 24,\r\n      marginRight: 4,\r\n    },\r\n    subtitle: {\r\n      fontSize: 14,\r\n      color: 'black',\r\n    },\r\n    lowerTitles: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n    },\r\n    boldTitle: {\r\n      fontSize: 24,\r\n      fontWeight: 'bold',\r\n      color: 'black',\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n    },\r\n    chartLineWrapper: {\r\n      marginTop: 40,\r\n    },\r\n    buttonContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: \"space-around\",\r\n      width: \"90%\",\r\n      alignSelf: \"center\"\r\n    },\r\n    activeGraphLabel: {\r\n      backgroundColor: '#bcbcbc',\r\n      borderRadius: 5,\r\n      width: \"10%\",\r\n      height: \"120%\"\r\n    },\r\n    buttonText: {\r\n      alignSelf: \"center\"\r\n    }\r\n  });\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}