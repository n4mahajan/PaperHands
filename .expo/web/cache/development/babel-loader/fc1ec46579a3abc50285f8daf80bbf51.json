{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jiahao Luo\\\\Documents\\\\PaperHands\\\\Project\\\\PaperHands\\\\PaperHands\\\\Home\\\\Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport axios from 'axios';\nimport CompanyRowItem from \"../Home/CompanyRowItem\";\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, companies;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"https://financialmodelingprep.com/api/v3/stock/actives?apikey=fc55df44cfed6224751cf95bc49f98ec\"));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.data.mostActiveStock);\n\n            case 5:\n              companies = _context.sent;\n              companies.sort(function (a, b) {\n                if (a.ticker < b.ticker) return -1;\n                return 1;\n              });\n              setResults(companies);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n    setLoading(false);\n  }, []);\n\n  if (loading === true) {\n    return React.createElement(View, {\n      style: styles.loadingIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, React.createElement(FlatList, {\n      data: results,\n      keyExtractor: function keyExtractor(item) {\n        return item.ticker;\n      },\n      style: styles.rowItem,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(CompanyRowItem, {\n          symbol: item.ticker,\n          description: item.companyName,\n          price: Number(item.price).toFixed(2),\n          priceChange: Number(item.changes).toFixed(2),\n          percentChange: Number(item.changesPercentage).toFixed(2),\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 6\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  }\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  rowItem: {\n    width: \"100%\"\n  },\n  loadingIcon: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Jiahao Luo/Documents/PaperHands/Project/PaperHands/PaperHands/Home/Home.js"],"names":["React","useContext","useEffect","useState","axios","CompanyRowItem","Home","navigation","search","setSearch","results","setResults","loading","setLoading","fetchData","get","response","data","mostActiveStock","companies","sort","a","b","ticker","styles","loadingIcon","container","item","rowItem","companyName","Number","price","toFixed","changes","changesPercentage","StyleSheet","create","flex","justifyContent","alignItems","width"],"mappings":"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","sourcesContent":["//\r\n//  Home\r\n//  PaperHands\r\n//\r\n//  Created by Nikhil, Kiran, Jiahao.\r\n//  Copyright Â© 2018 [Company]. All rights reserved.\r\n//\r\n\r\nimport React, {useContext, useEffect, useState} from \"react\"\r\nimport { Image, StyleSheet, Text, View, FlatList, ScrollView, ActivityIndicator} from \"react-native\"\r\nimport axios from 'axios'\r\nimport CompanyRowItem from \"../Home/CompanyRowItem\"\r\n\r\nexport default function Home({navigation}) {\r\n\tconst [search, setSearch] = useState('')\r\n\tconst [results, setResults] = useState(null)\r\n\tconst [loading,setLoading] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\t// const response = await axios.get(`https://finnhub.io/api/v1/stock/symbol?exchange=US&token=c54gglaad3ifdcrdm7u0`)\r\n\t\t\t// Get list of companies with highest volume of stocks sold today\r\n\t\t\tconst response = await axios.get(`https://financialmodelingprep.com/api/v3/stock/actives?apikey=fc55df44cfed6224751cf95bc49f98ec`)\r\n\t\t\tlet companies = await response.data.mostActiveStock\r\n\t\t\t//companies = await companies.filter(item => item.type === \"Common Stock\")\r\n\t\t\t// Initially sort companies in ascending order by their symbol\r\n\t\t\tcompanies.sort(function(a, b){\r\n\t\t\t\tif (a.ticker < b.ticker)\r\n\t\t\t\t\treturn -1\r\n\t\t\t\treturn 1\r\n\t\t\t})\r\n\t\t\tsetResults(companies)\r\n\t\t}\r\n\t\tfetchData()\r\n\t\tsetLoading(false)\r\n\t\t\r\n\t}, [])\r\n\r\n\tif (loading === true) {\r\n\t\treturn (\r\n\t\t\t<View style={styles.loadingIcon}>\r\n\t\t\t\t<ActivityIndicator size=\"large\" color=\"black\"/>\r\n\t\t\t</View>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<FlatList data={results} keyExtractor={(item) => item.ticker} style={styles.rowItem} renderItem={({item})=>(\r\n\t\t\t\t\t<CompanyRowItem symbol={item.ticker} description={item.companyName} price={Number(item.price).toFixed(2)} priceChange={Number(item.changes).toFixed(2)} \r\n\t\t\t\t\t\tpercentChange={Number(item.changesPercentage).toFixed(2)} navigation={navigation}/>\r\n\t\t\t\t)}/>\r\n\t\t\t</View>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\t\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\"\r\n\t},\r\n\trowItem: {\r\n\t\twidth: \"100%\"\r\n\t},\r\n\tloadingIcon: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tflex: 1\r\n\t}\r\n})"]},"metadata":{},"sourceType":"module"}